plugins {
  id 'org.springframework.boot' version 'latest.release'
  id 'io.spring.dependency-management' version 'latest.release'
  id 'java'
}

group = 'turtle'
version = '0.0.1-SNAPSHOT'

bootJar {
  enabled = true
}

jar {
  enabled = true
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation'org.springframework.boot:spring-boot-starter-security'
	implementation'org.springframework.session:spring-session-core'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'

  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '3.3.0'


  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
  implementation 'org.springframework.boot:spring-boot-starter-actuator:+'

  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
  implementation 'org.springframework.boot:spring-boot-starter-validation:+'

  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
  implementation 'org.springframework.boot:spring-boot-starter-mail:+'

  // https://mvnrepository.com/artifact/org.projectlombok/lombok
  compileOnly 'org.projectlombok:lombok:+'
  
  // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webflux-ui
  implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:+'

  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
  implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive:+'

  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis-reactive
  implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive:+'

  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:+'

  // https://mvnrepository.com/artifact/com.influxdb/influxdb-client-java
  implementation 'com.influxdb:influxdb-client-java:+'

  // https://mvnrepository.com/artifact/commons-io/commons-io
  implementation 'commons-io:commons-io:+'

  // https://mvnrepository.com/artifact/commons-codec/commons-codec
  implementation 'commons-codec:commons-codec:+'

  // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
  implementation 'io.jsonwebtoken:jjwt-api:+'

  // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:+'

  // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:+'

  // https://mvnrepository.com/artifact/org.apache.tika/tika-core
  implementation 'org.apache.tika:tika-core:+'

  // https://mvnrepository.com/artifact/org.zeroturnaround/zt-zip
  implementation 'org.zeroturnaround:zt-zip:+'

  // https://mapstruct.org/documentation/installation/
  implementation 'org.mapstruct:mapstruct:+'
  annotationProcessor 'org.mapstruct:mapstruct-processor:+'

  // https://mvnrepository.com/artifact/io.opentelemetry.instrumentation/opentelemetry-instrumentation-annotations
  implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:+'
}

tasks.named('test') {
  useJUnitPlatform()
}

task buildAndReload {
  dependsOn build
  mustRunAfter build    // buildAndReload must run after the source files are built into class files using build task
  doLast {
    new File(".", "reload-trigger.txt").text = "${System.currentTimeMillis()}" // update trigger file in root folder for hot reload
  }
}